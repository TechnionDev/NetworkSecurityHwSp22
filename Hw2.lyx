#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass amsart
\begin_preamble
\usepackage{xcolor}
\pagecolor[rgb]{0.15,0.15,0.15} %black
\color[rgb]{1,1,1} %grey

\newfontfamily\mylistingsfont{Noto Mono for Powerline}
\definecolor{lbcolor}{rgb}{0.3,0.3,0.3}  
\definecolor{lkwcolor}{rgb}{0.7,0.7,0.9}  
\end_preamble
\use_default_options true
\begin_removed_modules
theorems-ams
\end_removed_modules
\begin_modules
eqs-within-sections
figs-within-sections
linguistics
theorems-bytype
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "Arial"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1cm
\topmargin 1cm
\rightmargin 1cm
\bottommargin 1.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "basicstyle={\mylistingsfont},language={C++},backgroundcolor={\color{lbcolor}},showstringspaces=false,xleftmargin=5mm,aboveskip=0pt,belowskip=0pt,keywordstyle={\bfseries\color{lkwcolor}},morekeywords={include, printf}"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Network Security Hw2
\end_layout

\begin_layout Author
Gur Telem 206631848
\end_layout

\begin_layout Section
Question - Port scanning and Wireshark sniffing
\end_layout

\begin_layout Subsection
Part 1
\end_layout

\begin_layout Enumerate
The command I ran was 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

sudo nmap -T4 -p- -sS -A scanme.nmap.org | tee nmap_full_out.txt
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
The IP addresses of 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

scanme.nmap.org
\end_layout

\end_inset

 IPv4: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

45.33.32.156
\end_layout

\end_inset

 ; IPv6: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

2600:3c01::f03c:91ff:fe18:bb2f
\end_layout

\end_inset

 (this address wasn't scanned because we weren't required to scan IPv6).
\end_layout

\begin_layout Enumerate
The open ports are:
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

22
\end_layout

\end_inset

 for 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

SSH
\end_layout

\end_inset

 service.
\end_layout

\begin_layout Enumerate
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

80
\end_layout

\end_inset

 for 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

HTTP
\end_layout

\end_inset

 service
\end_layout

\begin_layout Enumerate
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

9929
\end_layout

\end_inset

 for 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

nping-echo
\end_layout

\end_inset

 service
\end_layout

\begin_layout Enumerate
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

31337
\end_layout

\end_inset

 for 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

tcpwrapped
\end_layout

\end_inset

 service
\end_layout

\end_deeper
\begin_layout Enumerate
According to 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

nmap
\end_layout

\end_inset

 the application listening for port 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

80
\end_layout

\end_inset

 is 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Apache/2.4.7 (Ubuntu)
\end_layout

\end_inset

 (version included)
\end_layout

\begin_layout Enumerate
The flag I used was 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

-A
\end_layout

\end_inset

.
 Using this flag (specifically script scanning) is considered intrusive
 so systems on the host's side may be in place to detect such attempts and
 alert someone or even initiate tighter security.
 It's also somewhat heavy to use this flag (some of the features like OS
 detection may slow down scans of many hosts).
\end_layout

\begin_layout Enumerate
Features enabled:
\end_layout

\begin_deeper
\begin_layout Enumerate
traceroute - traces the route to the host using multiple packets with increasing
 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

TTL
\end_layout

\end_inset

 values
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

TRACEROUTE (using port 80/tcp) 
\end_layout

\begin_layout Plain Layout

HOP RTT       ADDRESS 
\end_layout

\begin_layout Plain Layout

1   1.41 ms   OpenWrt.lan (192.168.1.1) 
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

9   201.74 ms if-2-4.csw6-fnc1.linode.com (173.230.159.87) 
\end_layout

\begin_layout Plain Layout

10  201.79 ms scanme.nmap.org (45.33.32.156)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
OS detection - tries to detect which OS the host is running:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Aggressive OS guesses: Linux 5.0 (95%), Linux 5.0 - 5.4 (95%), Linux 5.4 (94%),
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Part 2
\end_layout

\begin_layout Enumerate
\noindent
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(7)
\end_layout

\end_inset

A closed port is a port that no application is listening on.
 The response to the SYN request is RST/ACK.
\end_layout

\begin_layout Enumerate
\noindent
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(8)
\end_layout

\end_inset

A filtered port is a port that packets sent to it are ignored and no response
 is sent at all (blocked by firewall).
 No TCP packet is sent in response.
\end_layout

\begin_layout Enumerate
\noindent
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(9)
\end_layout

\end_inset


\begin_inset listings
inline true
status open

\begin_layout Plain Layout

nmap
\end_layout

\end_inset

 is sending the following HTTP requests: GET, OPTIONS, PROPFIND, POST
\end_layout

\begin_layout Section
Question
\end_layout

\begin_layout Subsection
Section - Stateless FW rules table
\end_layout

\begin_layout Standard
This is the table of rules for the 
\series bold
stateless
\series default
 firewall
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="9">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rule
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Direction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Src Addr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dst Addr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prot
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Src Port
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dst Port
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Action
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
spoof1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
inbound
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Internal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Deny
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
spoof2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
outbound
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
external
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Deny
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $GS_{i}$
\end_inset

_in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
inbound
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
External
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $IP\left(GS_{i}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UDP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10000$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Permit
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $GS_{i}$
\end_inset

_out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
outbound
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $IP\left(GS_{i}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
External
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UDP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10000$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
In stateless we don't know if it's a response when using UDP
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Permit
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GW_in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
inbound
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
External
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $IP\left(GW\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TCP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $20000$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Permit
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GW_out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
outbound
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $IP\left(GW\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
External
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TCP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $20000$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Permit
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Default
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Deny
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Any other communication is blocked using the 
\begin_inset Quotes eld
\end_inset

Default
\begin_inset Quotes erd
\end_inset

 rule.
 So the FS will not be allowed to pass the FW1.
\end_layout

\begin_layout Subsection
Section
\end_layout

\begin_layout Standard
This is the table of rules for the 
\series bold
stateful
\series default
 firewall (checked only against 
\begin_inset Formula $ACK=0$
\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="8">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rule
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Direction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Src Addr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dst Addr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prot
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Src Port
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dst Port
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Action
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
spoof1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
inbound
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Internal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Deny
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
spoof2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
outbound
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
external
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Deny
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $GS_{i}$
\end_inset

_in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
inbound
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
External
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $IP\left(GS_{i}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UDP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10000$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Permit
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GW_in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
inbound
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
External
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $IP\left(GW\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TCP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $20000$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Permit
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Default
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Deny
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
And in addition there's the dynamic table which will let any open sessions
 to continue.
 Including the method to create a dummy session for UDP that was taught
 in class.
\end_layout

\begin_layout Subsection
Section
\end_layout

\begin_layout Standard
Are the clients at vulnerable?
\end_layout

\begin_layout Standard
No.
 Because only the 
\begin_inset Formula $GS_{i}$
\end_inset

 servers are connecting with the game's client and we trust them not to
 be malicious (if the company was malicious then the client itself could
 simply be a malware and it doesn't matter if we have Log4j or not).
\end_layout

\begin_layout Standard
Also, the client doesn't listen to any ports so no attacker can initiate
 a session to any of the clients so they're not at risk.
\end_layout

\begin_layout Subsection
Section
\end_layout

\begin_layout Standard
The servers are also using Log4j.
\end_layout

\begin_layout Standard
Now this is a problem because a malicious client can craft a special packet
 to get control of a 
\begin_inset Formula $GS_{i}$
\end_inset

 server and then they can connect with the FS using the 
\begin_inset Formula $GS_{i}$
\end_inset

 as a proxy, thus, bypassing FW1 and being able to retrieve the source code
 for the game.
\end_layout

\begin_layout Standard
The step the attacker would do are something like this
\end_layout

\begin_layout Enumerate
Craft packet that exploits Log4j's one-day exploit.
\end_layout

\begin_layout Enumerate
Take control of say 
\begin_inset Formula $GS_{1}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Run a proxy server on it that listens on port 
\begin_inset Formula $10000$
\end_inset

 UDP (we can implement TCP over UDP so there's not really a problem with
 reliability)
\end_layout

\begin_layout Enumerate
Using the proxy server, access 
\begin_inset Formula $FS$
\end_inset

 and download the source code of the game.
\end_layout

\begin_layout Subsection
Section
\end_layout

\begin_layout Standard
Why is that important? All of the steps are possible with stateful packet
 filtering as well as stateless.
 We can initially send packets over UDP to port 
\begin_inset Formula $10000$
\end_inset

 and then we simply communicate 
\begin_inset Quotes eld
\end_inset

normally
\begin_inset Quotes erd
\end_inset

 over the same port that we're allowed to.
 The rest of the traffic isn't even going through FW.
\end_layout

\begin_layout Standard
Even the implementation of the TCP over the UDP protocol is possible with
 stateful, you don't even need to turn off the server for other clients,
 the attack can simply wrap the server with almost 
\begin_inset Formula $0$
\end_inset

 downtime and simply reroute unrelated packets (unrelated to the game) and
 treat them as communication of the malicious proxy server.
\end_layout

\begin_layout Standard
I'm not sure I understand what the problem with stateful is.
\end_layout

\begin_layout Subsection
Section
\end_layout

\begin_layout Standard
I have a little more than 2 suggestions but I put the best ones first:
\end_layout

\begin_layout Enumerate
In the FTP settings, permit access only read access and only to the folder
 where the binaries of the game are located (and make sure it doesn't contain
 the sources).
\end_layout

\begin_layout Enumerate
Set the authentication keys on the 
\begin_inset Formula $GS_{i}$
\end_inset

 servers accessibly from a different user (say root) than the one running
 the game and Log4j and trust Linux's security to not allow privilege escalation.
 Detailed changes would be (assuming the FTP authentication is done using
 RSA private/public keys):
\end_layout

\begin_deeper
\begin_layout Enumerate
Create users: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

game_usr
\end_layout

\end_inset

 and 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

update_usr
\end_layout

\end_inset

 and add them to the same group 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

service_usrs
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Change ownership of the public and private keys of the RSA key to 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

update_usr
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Set 
\begin_inset Quotes eld
\end_inset

other
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

group
\begin_inset Quotes erd
\end_inset

 permissions for the keys to 
\begin_inset Formula $0$
\end_inset

 (so no READ/WRITE/EXECUTE).
\end_layout

\begin_layout Enumerate
Set ownership of the files required by the game server to be owned by the
 group 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

service_usrs
\end_layout

\end_inset

 and make sure to set RD/WR permissions to both owner and group.
\end_layout

\begin_layout Enumerate
When wanting to update a 
\begin_inset Formula $GS_{i}$
\end_inset

 we can simply connect from the user 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

update_usr
\end_layout

\end_inset

 on 
\begin_inset Formula $GS_{i}$
\end_inset

 to FS using FTP and update the files.
 Make sure that the executables used for the update don't have any access
 from the user 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

game_usr
\end_layout

\end_inset

.
\end_layout

\begin_layout Enumerate
Now connect to the user 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

game_usr
\end_layout

\end_inset

 and simply restart the game server (not the machine itself).
 NOTE: It's important to run the game server from this user so we don't
 expose.
\end_layout

\begin_layout Enumerate
OPTIONAL: We can modify the kernel such that it will only allow the 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

game_usr
\end_layout

\end_inset

 to communicate with the client and not send packets to internal hosts,
 specifically FS.
\end_layout

\begin_layout Enumerate
No extra devices needed on the network.
\end_layout

\end_deeper
\begin_layout Enumerate
Initiate request from the FS:
\end_layout

\begin_deeper
\begin_layout Enumerate
Put a second firewall (FW2 - stateless is fine) between the FS and the rest
 of the internal network (isolating it)
\end_layout

\begin_layout Enumerate
Disable the FTP server on FS and run an FTP service on each of the 
\begin_inset Formula $GS_{i}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Deny any sessions initiated not by the FS in FW2 but allow FS to initiate
 connections to the 
\begin_inset Formula $GS_{i}$
\end_inset

's FTP services.
\end_layout

\begin_layout Enumerate
When it's time to update, upload from FS to each of 
\begin_inset Formula $GS_{i}$
\end_inset

 using their FTP service.
\end_layout

\begin_layout Enumerate
FW1 is unchanged
\end_layout

\begin_layout Enumerate
Need one extra device - firewall (or even only software firewall because
 speed is not of the essence for updating)
\end_layout

\end_deeper
\begin_layout Enumerate
Add a proxy server in the internal network for outbound traffic:
\end_layout

\begin_deeper
\begin_layout Enumerate
The proxy can inspect each packet going back and forth and make sure no
 data similar to the source files are sent outside the network.
\end_layout

\begin_layout Enumerate
I would also suggest escaping and/or capping messages the clients send to
 prevent even using the vulnerability but I guess this is considered 
\begin_inset Quotes eld
\end_inset

patching
\begin_inset Quotes erd
\end_inset

 the exploit and not allowed.
\end_layout

\end_deeper
\begin_layout Standard
In suggestion 
\begin_inset Formula $3$
\end_inset

 the network looks like that:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Hw2Q2.6FW2.png
	scale 12

\end_inset


\end_layout

\begin_layout Standard
In the first two suggestions the network would look the same.
\end_layout

\begin_layout Standard
I'm not bothering with suggestion 
\begin_inset Formula $4$
\end_inset

's network map because it's simply a bad idea (explained in next section).
\end_layout

\begin_layout Subsection
Section
\end_layout

\begin_layout Standard
Compare between the options.
\end_layout

\begin_layout Standard
First of all, note that in real life, the exploit should be fixed.
 It's a rookie mistake to ignore vulnerabilities.
\end_layout

\begin_layout Standard
Let's inspect each suggestion:
\end_layout

\begin_layout Enumerate
Prevents anything except binaries to be downloaded from the FS (even inside
 the internal network)
\end_layout

\begin_deeper
\begin_layout Enumerate
(good) This will prevent a compromised host (
\begin_inset Formula $GS_{i}$
\end_inset

) to download source files from FS
\end_layout

\begin_layout Enumerate
(good) It requires no extra hardware and doesn't affect the connection to
 the clients.
\end_layout

\begin_layout Enumerate
(good) It's the easiest to configure.
 A matter of minutes and requires very little testing to confirm it's working.
\end_layout

\begin_layout Enumerate
(bad?) This assumes FTP mitigates properly the access to folders and files.
\end_layout

\begin_layout Enumerate
This is a good idea but not perfect.
 Since the attacker can still access the binaries and transfer those and
 possible (with effort) reverse engineer them, possibly finding more vulnerabili
ties but also being able to get disassemble and modify the executable.
\end_layout

\begin_layout Enumerate
(bad) It doesn't isolate the server containing the sensitive information
 so an attacker can scan for other weak points in the internal network to
 access the FS.
\end_layout

\end_deeper
\begin_layout Enumerate
Prevent connection to FTP from the compromised account
\end_layout

\begin_deeper
\begin_layout Enumerate
(good) This option limits the surface of attack by isolating the a component
 that is vulnerable as much as possible.
\end_layout

\begin_layout Enumerate
(good) Prevent the attacker from even connecting to the FTP so they couldn't
 download anything, let alone source code.
\end_layout

\begin_layout Enumerate
(good) It also requires no extra hardware but a little more complex to configure.
\end_layout

\begin_layout Enumerate
(good) It also doesn't affect the connection to the clients.
\end_layout

\begin_layout Enumerate
This option is good and only but again not perfect as the attacker can still
 access the binaries that are located on the compromised server.
\end_layout

\begin_layout Enumerate
(bad) It doesn't isolate the server containing the sensitive information
 so an attacker can scan for other weak points in the internal network to
 access the FS.
\end_layout

\end_deeper
\begin_layout Enumerate
Move the FTP server to the 
\begin_inset Formula $GS_{i}$
\end_inset

 and initiate the update from FS
\end_layout

\begin_deeper
\begin_layout Enumerate
This completely removes the option for an attacker to initiate a connection
 to FS
\end_layout

\begin_layout Enumerate
It also removes the ability of a compromised server to choose what data
 to retrieve even once an update has started.
\end_layout

\begin_layout Enumerate
It also doesn't affect the connection to clients.
\end_layout

\begin_layout Enumerate
Separating sensitive servers and servers exposed to the Internet is a good
 idea.
 Allowing a few points as possible between the FS and the 
\begin_inset Formula $GS_{i}$
\end_inset

s and monitoring that traffic by any combination of stateless/stateful/proxy
 is a good idea.
\end_layout

\begin_layout Enumerate
This option requires a little more maintenance and possibly heavier on resources
 as instead of a single FTP server we now have 
\begin_inset Formula $n$
\end_inset

 servers (for each 
\begin_inset Formula $GS_{i}$
\end_inset

).
\end_layout

\begin_layout Enumerate
It's not as bad though because most of the time the FTP servers are idle
 (except during update when the 
\begin_inset Formula $GS_{i}$
\end_inset

 can't serve clients anyways so it has excess resources either way).
\end_layout

\end_deeper
\begin_layout Enumerate
Proxy to inspect data going out of the internal network and blocking data
 not permitted
\end_layout

\begin_deeper
\begin_layout Enumerate
This is a very bad option for a few reasons
\end_layout

\begin_layout Enumerate
A game server needs to be 
\series bold
fast
\series default
 and a proxy would add noticeable latency for all clients.
\end_layout

\begin_layout Enumerate
An attacker can encrypt the data before sending so the proxy wouldn't be
 able to inspect it.
\end_layout

\begin_layout Enumerate
Even if the proxy block anything 
\series bold
except
\series default
 permitted packets, it's still possible to encode the source code into a
 bunch of 
\begin_inset Quotes eld
\end_inset

permitted
\begin_inset Quotes erd
\end_inset

 packets (for example, go left is 
\begin_inset Formula $0$
\end_inset

 and go right is 
\begin_inset Formula $1$
\end_inset

 and continuously send packets representing the 
\begin_inset Formula $0$
\end_inset

s and 
\begin_inset Formula $1$
\end_inset

s that are the raw bit of the source code).
\end_layout

\begin_layout Enumerate
It's also expensive because it requires a whole new host machine and a lot
 of man hours to code the detection of things.
 And it's a new type so a whole new maintenance procedure.
\end_layout

\begin_layout Enumerate
I'm not even going to bother paining it.
\end_layout

\end_deeper
\begin_layout Standard
That's basically it.
 I'd probably use a mix of the first 
\begin_inset Formula $3$
\end_inset

 suggestions.
 Will possibly transfer the game files (zipped) over SSH (that is probably
 present anyways for server machines).
\end_layout

\end_body
\end_document
